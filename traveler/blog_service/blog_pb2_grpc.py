# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import blog_pb2 as blog__pb2

GRPC_GENERATED_VERSION = '1.63.0'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in blog_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class BlogServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateBlog = channel.unary_unary(
                '/blog.BlogService/CreateBlog',
                request_serializer=blog__pb2.CreateBlogRequest.SerializeToString,
                response_deserializer=blog__pb2.BlogResponse.FromString,
                _registered_method=True)
        self.CreatePost = channel.unary_unary(
                '/blog.BlogService/CreatePost',
                request_serializer=blog__pb2.CreatePostRequest.SerializeToString,
                response_deserializer=blog__pb2.PostResponse.FromString,
                _registered_method=True)
        self.PostComment = channel.unary_unary(
                '/blog.BlogService/PostComment',
                request_serializer=blog__pb2.PostCommentRequest.SerializeToString,
                response_deserializer=blog__pb2.CommentResponse.FromString,
                _registered_method=True)
        self.EditComment = channel.unary_unary(
                '/blog.BlogService/EditComment',
                request_serializer=blog__pb2.EditCommentRequest.SerializeToString,
                response_deserializer=blog__pb2.CommentResponse.FromString,
                _registered_method=True)
        self.GetAllPosts = channel.unary_unary(
                '/blog.BlogService/GetAllPosts',
                request_serializer=blog__pb2.Empty.SerializeToString,
                response_deserializer=blog__pb2.PostsResponse.FromString,
                _registered_method=True)
        self.GetAllBlogs = channel.unary_unary(
                '/blog.BlogService/GetAllBlogs',
                request_serializer=blog__pb2.Empty.SerializeToString,
                response_deserializer=blog__pb2.BlogsResponse.FromString,
                _registered_method=True)
        self.GetBlogById = channel.unary_unary(
                '/blog.BlogService/GetBlogById',
                request_serializer=blog__pb2.BlogIdRequest.SerializeToString,
                response_deserializer=blog__pb2.BlogResponse.FromString,
                _registered_method=True)
        self.GetPostById = channel.unary_unary(
                '/blog.BlogService/GetPostById',
                request_serializer=blog__pb2.PostIdRequest.SerializeToString,
                response_deserializer=blog__pb2.PostResponse.FromString,
                _registered_method=True)
        self.GetCommentsByPostId = channel.unary_unary(
                '/blog.BlogService/GetCommentsByPostId',
                request_serializer=blog__pb2.PostIdRequest.SerializeToString,
                response_deserializer=blog__pb2.CommentsResponse.FromString,
                _registered_method=True)


class BlogServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateBlog(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreatePost(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PostComment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditComment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllPosts(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAllBlogs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBlogById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPostById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCommentsByPostId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_BlogServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateBlog': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBlog,
                    request_deserializer=blog__pb2.CreateBlogRequest.FromString,
                    response_serializer=blog__pb2.BlogResponse.SerializeToString,
            ),
            'CreatePost': grpc.unary_unary_rpc_method_handler(
                    servicer.CreatePost,
                    request_deserializer=blog__pb2.CreatePostRequest.FromString,
                    response_serializer=blog__pb2.PostResponse.SerializeToString,
            ),
            'PostComment': grpc.unary_unary_rpc_method_handler(
                    servicer.PostComment,
                    request_deserializer=blog__pb2.PostCommentRequest.FromString,
                    response_serializer=blog__pb2.CommentResponse.SerializeToString,
            ),
            'EditComment': grpc.unary_unary_rpc_method_handler(
                    servicer.EditComment,
                    request_deserializer=blog__pb2.EditCommentRequest.FromString,
                    response_serializer=blog__pb2.CommentResponse.SerializeToString,
            ),
            'GetAllPosts': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllPosts,
                    request_deserializer=blog__pb2.Empty.FromString,
                    response_serializer=blog__pb2.PostsResponse.SerializeToString,
            ),
            'GetAllBlogs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAllBlogs,
                    request_deserializer=blog__pb2.Empty.FromString,
                    response_serializer=blog__pb2.BlogsResponse.SerializeToString,
            ),
            'GetBlogById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBlogById,
                    request_deserializer=blog__pb2.BlogIdRequest.FromString,
                    response_serializer=blog__pb2.BlogResponse.SerializeToString,
            ),
            'GetPostById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPostById,
                    request_deserializer=blog__pb2.PostIdRequest.FromString,
                    response_serializer=blog__pb2.PostResponse.SerializeToString,
            ),
            'GetCommentsByPostId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCommentsByPostId,
                    request_deserializer=blog__pb2.PostIdRequest.FromString,
                    response_serializer=blog__pb2.CommentsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'blog.BlogService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class BlogService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateBlog(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.BlogService/CreateBlog',
            blog__pb2.CreateBlogRequest.SerializeToString,
            blog__pb2.BlogResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreatePost(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.BlogService/CreatePost',
            blog__pb2.CreatePostRequest.SerializeToString,
            blog__pb2.PostResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PostComment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.BlogService/PostComment',
            blog__pb2.PostCommentRequest.SerializeToString,
            blog__pb2.CommentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EditComment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.BlogService/EditComment',
            blog__pb2.EditCommentRequest.SerializeToString,
            blog__pb2.CommentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllPosts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.BlogService/GetAllPosts',
            blog__pb2.Empty.SerializeToString,
            blog__pb2.PostsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAllBlogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.BlogService/GetAllBlogs',
            blog__pb2.Empty.SerializeToString,
            blog__pb2.BlogsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBlogById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.BlogService/GetBlogById',
            blog__pb2.BlogIdRequest.SerializeToString,
            blog__pb2.BlogResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPostById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.BlogService/GetPostById',
            blog__pb2.PostIdRequest.SerializeToString,
            blog__pb2.PostResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCommentsByPostId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/blog.BlogService/GetCommentsByPostId',
            blog__pb2.PostIdRequest.SerializeToString,
            blog__pb2.CommentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
